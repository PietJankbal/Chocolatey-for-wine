diff --git a/dlls/wintypes/main.c b/dlls/wintypes/main.c
index d5bfb5ad11c..8bc04c736af 100644
--- a/dlls/wintypes/main.c
+++ b/dlls/wintypes/main.c
@@ -25,6 +25,8 @@
 #include "winstring.h"
 #include "wine/debug.h"
 #include "objbase.h"
+#include "roapi.h"
+
 
 #include "activation.h"
 #include "rometadataresolution.h"
@@ -354,16 +356,80 @@ HRESULT WINAPI RoIsApiContractMajorVersionPresent(const WCHAR *name, UINT16 majo
 }
 
 HRESULT WINAPI RoResolveNamespace(HSTRING name, HSTRING windowsMetaDataDir,
-                                  DWORD packageGraphDirsCount, const HSTRING *packageGraphDirs,
-                                  DWORD *metaDataFilePathsCount, HSTRING **metaDataFilePaths,
-                                  DWORD *subNamespacesCount, HSTRING **subNamespaces)
-{
-    FIXME("name %s, windowsMetaDataDir %s, metaDataFilePaths %p, subNamespaces %p stub!\n",
-            debugstr_hstring(name), debugstr_hstring(windowsMetaDataDir),
-            metaDataFilePaths, subNamespaces);
-
-    if (!metaDataFilePaths && !subNamespaces)
-        return E_INVALIDARG;
+	DWORD packageGraphDirsCount, const HSTRING *packageGraphDirs,
+		DWORD *metaDataFilePathsCount, HSTRING **metaDataFilePaths,
+		DWORD *subNamespacesCount, HSTRING **subNamespaces)
+{
+	//https://learn.microsoft.com/en-us/windows/win32/api/rometadataresolution/nf-rometadataresolution-roresolvenamespace
+	//name L"Windows.Services.Store", windowsMetaDataDir L"", metaDataFilePaths 0000000000419088, subNamespaces 0000000000000000 stub!
+
+	const WCHAR a[][MAX_PATH] = { 
+		L"Windows.applicationmodel",
+		L"Windows.Data",
+		L"Windows.Devices",
+		L"Windows.Foundation",
+		L"Windows.Gaming",
+		L"Windows.Globalization",
+		L"Windows.Graphics",
+		L"Windows.Management",
+		L"Windows.Media",
+		L"Windows.Networking",
+		L"Windows.Perception",
+		L"Windows.Security",
+		L"Windows.Services",
+		L"Windows.Storage",
+		L"Windows.System",
+		L"Windows.UI",
+		L"Windows.UI.Xaml",
+		L"Windows.Web" };
+
+	int i = 0;
+	HRESULT h;
+
+	if (!metaDataFilePaths && !subNamespaces)
+		return E_INVALIDARG;
+
+	const WCHAR *buffer = WindowsGetStringRawBuffer(name, NULL);
+	HSTRING *str = malloc(sizeof(HSTRING)), *str2 = malloc(sizeof(HSTRING));
+	// const WCHAR *path = L"C:\\Windows\\system32\\WinMetadata\\Windows.Services.winmd";
+
+	FIXME("name %s, windowsMetaDataDir %s, metaDataFilePaths %p, subNamespaces %p stub!\n",
+		debugstr_hstring(name), debugstr_hstring(windowsMetaDataDir),
+		metaDataFilePaths, subNamespaces);
+
+	WCHAR path[MAX_PATH] = L"C:\\windows\\system32\\WinMetadata\\";
+
+	while (a[i])
+	{
+		if (wcsstr(buffer, a[i]) != 0)
+		{
+			wcscat(wcscat(path, a[i]), L".winmd");
+
+			if (WindowsCreateString(path, wcslen(path), str) == S_OK)
+			{
+				FIXME("Setting vars\n");
+				*metaDataFilePaths = str;
+				if (metaDataFilePathsCount) *metaDataFilePathsCount = 1;
+
+				FIXME("Done setting\n");
+				h = S_OK;
+			}
+			else
+			{
+				FIXME("OUT OF MEMORY");
+				h = E_OUTOFMEMORY;
+			}
+
+			break;
+			//*subNamespacesCount = 0;
+			//WindowsCreateString(L"Profile.SystemManufacturers.SmbiosInformation", wcslen(L"Profile.SystemManufacturers.SmbiosInformation"), str2);
+			//*subNamespaces = str2;
+		}
+
+		i++;
+	}
+
+	if (h != S_OK) h = RO_E_METADATA_NAME_NOT_FOUND;
+	return h;
 
-    return RO_E_METADATA_NAME_NOT_FOUND;
 }
