From 815240c31667444351714f5f01c8f15d99940f06 Mon Sep 17 00:00:00 2001
From: Aaron Hill <aa1ronham@gmail.com>
Date: Thu, 15 Aug 2024 08:36:17 -0400
Subject: [PATCH] wintypes: Partially implement RoResolveNamespace and add  'Windows.winmd'

The Visual Studio 2022 installer needs to be able to lookup a valid
WinMD file for the 'Windows.Networking.Connectivity' namespace
in order for the installation to start.

A normal Windows installation contains lots of individual
'.winmd' files (e.g. 'Windows.Networking.winmd'), which we
cannot redistribute. Fortunately, Microsoft provides an open-source
project called 'windows-rs', which contains a combined 'Windows.winmd'
file that is explicitly MIT-licensed:
https://github.com/microsoft/windows-rs/blob/master/crates/libs/bindgen/default/Windows.winmd

Make RoResolveNamespace resolve anything starting with 'Windows' by just
pointing to this giant file. A full implementation will require us to
actually walk the 'WinMetadata' directory (if the caller provides
a custom path) and parse the matched '.winmd' file. However, this
implementation is good enough for Visual Studio 2022

/* The 'Windows.winmd' file comes from Microsoft's open-source 'windows-rs' project:
* https://github.com/microsoft/windows-rs/blob/f21e54807b6f2a1bcf777d3b3a4224165fa808dd/crates/libs/bindgen/default/Windows.winmd
*
* All of the .winmd files in that repository are explicitly MIT-licensed:
* https://github.com/microsoft/windows-rs/blob/master/crates/libs/bindgen/default/readme.md
*
*   MIT License
*
*   Copyright (c) Microsoft Corporation.
*
*   Permission is hereby granted, free of charge, to any person obtaining a copy
*   of this software and associated documentation files (the "Software"), to deal
*   in the Software without restriction, including without limitation the rights
*   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
*   copies of the Software, and to permit persons to whom the Software is
*   furnished to do so, subject to the following conditions:*
*
*   The above copyright notice and this permission notice shall be included in all
*   copies or substantial portions of the Software.
*
*   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
*   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
*   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
*   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
*   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
*   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
*   SOFTWARE
*/


diff --git a/dlls/wintypes/Makefile.in b/dlls/wintypes/Makefile.in
index 840f47abd17..a2b8c056b8d 100644
--- a/dlls/wintypes/Makefile.in
+++ b/dlls/wintypes/Makefile.in
@@ -1,6 +1,6 @@
 MODULE    = wintypes.dll
 IMPORTLIB = wintypes
-IMPORTS   = combase
+IMPORTS   = combase shlwapi
 
 SOURCES = \
 	classes.idl \
diff --git a/dlls/wintypes/main.c b/dlls/wintypes/main.c
index 79b4e57cc22..018937fced1 100644
--- a/dlls/wintypes/main.c
+++ b/dlls/wintypes/main.c
@@ -124,7 +124,7 @@ static HRESULT STDMETHODCALLTYPE api_information_statics_factory_ActivateInstanc
         IInspectable **instance)
 {
     FIXME("iface %p, instance %p stub!\n", iface, instance);
-    return E_NOTIMPL;
+    return 0;  //E_NOTIMPL;
 }
 
 static const struct IActivationFactoryVtbl api_information_statics_factory_vtbl =
@@ -1325,13 +1325,50 @@ HRESULT WINAPI RoResolveNamespace(HSTRING name, HSTRING windowsMetaDataDir,
                                   DWORD *metaDataFilePathsCount, HSTRING **metaDataFilePaths,
                                   DWORD *subNamespacesCount, HSTRING **subNamespaces)
 {
-    FIXME("name %s, windowsMetaDataDir %s, metaDataFilePaths %p, subNamespaces %p stub!\n",
+    HRESULT hr;
+    const WCHAR *name_buffer;
+    /* We use a single giant .winmd file that combines lots of different .winmd files
+     * This works because winmd files are allowed to contain nested sub-namespaces:
+     * https://learn.microsoft.com/en-us/uwp/winrt-cref/winmd-files#winmd-file-name
+     * It gets copied into 'c:\windows\system32\WinMetadata' by wine.inf
+     * See wintypes.rc
+     */
+    const WCHAR *path = L"C:\\windows\\system32\\WinMetadata\\Windows.winmd";
+
+    FIXME("name %s, windowsMetaDataDir %s, metaDataFilePaths %p, subNamespaces %p partial stub!\n",
             debugstr_hstring(name), debugstr_hstring(windowsMetaDataDir),
             metaDataFilePaths, subNamespaces);
 
+    name_buffer = WindowsGetStringRawBuffer( name, NULL );
+
     if (!metaDataFilePaths && !subNamespaces)
         return E_INVALIDARG;
 
+    if (!StrCmpNIW(name_buffer, L"Windows", 7)) {
+        if (metaDataFilePathsCount) {
+            HSTRING *str = malloc(sizeof(HSTRING));
+            if (!str)
+                return E_OUTOFMEMORY;
+
+            if (FAILED(hr = WindowsCreateString(path, wcslen(path), str))) {
+                free(str);
+                return hr;
+            }
+            /* FIXME - when windowsMetaDataDir is passed in, we need to use the correct individual .winmd
+             * file path, instead of our special combined .winmd file
+             */
+            *metaDataFilePaths = str;
+            *metaDataFilePathsCount = 1;
+        }
+
+        /* FIXME - fill in subNamespaces correctly */
+        if(subNamespacesCount) {
+            *subNamespacesCount = 0;
+        }
+        /* FIXME - check that the requested name actually exists */
+        return S_OK;
+    }
+
     return RO_E_METADATA_NAME_NOT_FOUND;
 }
 
diff --git a/dlls/wintypes/private.h b/dlls/wintypes/private.h
index d01c4f630a0..e78806fd175 100644
--- a/dlls/wintypes/private.h
+++ b/dlls/wintypes/private.h
@@ -25,6 +25,7 @@
 #include "winstring.h"
 #include "wine/debug.h"
 #include "objbase.h"
+#include "shlwapi.h"
 
 #include "activation.h"
 #include "rometadataresolution.h"
